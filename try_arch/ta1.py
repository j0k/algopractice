# 14.07.2017

# build arch

3 типа архитектур
1) - большой список комманд работающих независимо и друг о друге не знающих
2) - одно большое инфрастуктурное решение on big command infrastructure
3) - супер flexible архитектура

Какие данные получаем:
1) info, trades, depths, avgs
2) + subscription

# array threaded languaes

Примеры работы:
1) ./dump
<- help с описание

2) ./dump info
means = ./dump all info data from all exchanges
# =

3) ./dump info all
дампим всё и отовсюду. Чисто семантически нужно сохранить возможность писать
таким образом и так. Функциональность должна быть, но в реальности этот пример
воплощать не будем.

4) ./dump -c all.conf

5) ./dump generate conf subscribe BTC_e trades

6) ./dump generate conf subscribe BTC_e depth

7) ./dump generate conf subscribe BTC_e avgs

8) ./dump generate conf subscribe BTC_e avgs

> не хватает учёта API_secret

Нужно учест ключевые слова from и to
Т.е. откуда дампить и куда.

# в может состоять наше преймущество как у платформы?
# - надёжность
# - простота использования
# - гибкость
# - простая и развитая возможность подключения сторонних
# - простота подключения новых бирж
# - данные просты для импорта в pandas
# - во время подключения биржи есть #testmode
# - команды, которые набираются в консоле или фигурируют в конфиге
#   эквивалентны методам py классов


# тема с ключами API_SECRET

# Q: как быть с ситуацией когда у нас есть биржа и на ней есть МНОГО валютных пар
# A: параллелить обращения в различным валютным парам в потоках

# 1:
# 2:
